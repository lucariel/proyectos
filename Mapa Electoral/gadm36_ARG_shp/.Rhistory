str_view(stringr::words, "[aeiou]")
#b) That only contain consonants. (Hint: thinking about matching “not”-vowels.)
str_view(stringr::words, "[^aeiou]")
#b) That only contain consonants. (Hint: thinking about matching “not”-vowels.)
str_view(stringr::words, "^[aeiou]")
#b) That only contain consonants. (Hint: thinking about matching “not”-vowels.)
str_view(stringr::words, "^[^aeiou]")
#b) That only contain consonants. (Hint: thinking about matching “not”-vowels.)
str_view(stringr::words, "^[^aeiou]", match = T )
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
source('~/Documents/R/Proyectos/Matriz IP/cordoba-iom.R', echo=TRUE)
setwd("~/Documents/R/Proyectos/Matriz IP")
source('~/Documents/R/Proyectos/Matriz IP/cordoba-iom.R', echo=TRUE)
source('~/Documents/R/Proyectos/Matriz IP/cordoba-iom.R', echo=TRUE)
source('~/Documents/R/Proyectos/Matriz IP/cordoba-iom.R', echo=TRUE)
source('~/Documents/R/Proyectos/Matriz IP/cordoba-iom.R', echo=TRUE)
#turism next 8
turism1<-colSums(nmatriz[(117:125),,drop = F], na.rm = T)
#View(matriz1)
class(matriz1$CULTIVOS.DE.CEREALES)
##testing colSums
rowSums(matriz1[(1:2),], na.rm = T)
?colSums()
x <- matrix(1:20, 4)
rowSums(x, n = 1)
#View(rowSums(matriz1[,(4:5),drop = F], na.rm = T))
#### working with rows########
#The first 16 columns are the sector agro.
agro<-rowSums(matriz1[,(4:20),drop = F], na.rm = T)
#the next 3 are from mining.
mining<-rowSums(matriz1[,(21:25),drop = F], na.rm = T)
#the 30 next are agroindustries
agroindustries<-rowSums(matriz1[,(26:56),drop = F], na.rm = T)
#next 20 chemestry
chemistry<-rowSums(matriz1[,(57:77),drop = F], na.rm = T)
#next 7 steal_derivatives
steal_derivatives<-rowSums(matriz1[,(78:85),drop = F], na.rm = T)
#metalmecanica 21
steal_mechanic<-rowSums(matriz1[,(86:107),drop = F], na.rm = T)
#next 3 basicservices
basicservices<-rowSums(matriz1[,(108:111),drop = F], na.rm = T)
#next construction
construction<-rowSums(matriz1[,(112:113),drop = F], na.rm = T)
#comerce next 2
commerce<-rowSums(matriz1[,(114:116),drop = F], na.rm = T)
#turism next 8
turism<-rowSums(matriz1[,(117:125),drop = F], na.rm = T)
##Properly convert to numeric
matriz1 <- mutate_all(matriz1, function(x) as.numeric(as.character(x)))
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
##Properly convert to numeric
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
matriz1 <- mutate_all(matriz1, function(x) as.numeric(as.character(x)))
#View(matriz1)
class(matriz1$CULTIVOS.DE.CEREALES)
source('~/Documents/R/Proyectos/Matriz IP/cordoba-iom.R', echo=TRUE)
##testing colSums
rowSums(matriz1[(1:2),], na.rm = T)
?colSums()
x <- matrix(1:20, 4)
rowSums(x, n = 1)
#View(rowSums(matriz1[,(4:5),drop = F], na.rm = T))
#### working with rows########
#The first 16 columns are the sector agro.
agro<-rowSums(matriz1[,(4:20),drop = F], na.rm = T)
#the next 3 are from mining.
mining<-rowSums(matriz1[,(21:25),drop = F], na.rm = T)
#the 30 next are agroindustries
agroindustries<-rowSums(matriz1[,(26:56),drop = F], na.rm = T)
#next 20 chemestry
chemistry<-rowSums(matriz1[,(57:77),drop = F], na.rm = T)
#next 7 steal_derivatives
steal_derivatives<-rowSums(matriz1[,(78:85),drop = F], na.rm = T)
#metalmecanica 21
steal_mechanic<-rowSums(matriz1[,(86:107),drop = F], na.rm = T)
#next 3 basicservices
basicservices<-rowSums(matriz1[,(108:111),drop = F], na.rm = T)
#next construction
construction<-rowSums(matriz1[,(112:113),drop = F], na.rm = T)
#comerce next 2
commerce<-rowSums(matriz1[,(114:116),drop = F], na.rm = T)
#turism next 8
turism<-rowSums(matriz1[,(117:125),drop = F], na.rm = T)
#next 2 comunications
comunications<-rowSums(matriz1[,(126:128),drop = F], na.rm = T)
#next 2 FS
finances<-rowSums(matriz1[,(129:131),drop = F], na.rm = T)
professional_services<-rowSums(matriz1[,(132:135),drop = F], na.rm = T)
#next 6 goverment
gov<-rowSums(matriz1[,(133:139),drop = F], na.rm = T)
nmatriz<-cbind(agro,mining,agroindustries,chemistry,steal_derivatives,steal_mechanic,basicservices, construction, commerce, turism, comunications, finances,professional_services, gov)
#The first 16 columns are the sector agro.
agro1<-colSums(nmatriz[(4:20),,drop = F], na.rm = T)
#the next 3 are from mining.
mining1<-colSums(nmatriz[(21:25),,drop = F], na.rm = T)
#the 30 next are agroindustries
agroindustries1<-colSums(nmatriz[(26:56),,drop = F], na.rm = T)
#next 20 chemestry
chemistry1<-colSums(nmatriz[(57:77),,drop = F], na.rm = T)
#next 7 steal_derivatives
steal_derivatives1<-colSums(nmatriz[(78:85),,drop = F], na.rm = T)
#metalmecanica 21
steal_mechanic1<-colSums(nmatriz[(86:107),,drop = F], na.rm = T)
#next 3 basicservices
basicservices1<-colSums(nmatriz[(108:111),,drop = F], na.rm = T)
#next construction
construction1<-colSums(nmatriz[(112:113),,drop = F], na.rm = T)
#comerce next 2
commerce1<-colSums(nmatriz[(114:116),,drop = F], na.rm = T)
#turism next 8
turism1<-colSums(nmatriz[(117:125),,drop = F], na.rm = T)
#next 2 comunications
comunications1<-colSums(nmatriz[(126:128),,drop = F], na.rm = T)
#next 2 FS
finances1<-colSums(nmatriz[(129:131),,drop = F], na.rm = T)
professional_services1<-colSums(nmatriz[(132:135),,drop = F], na.rm = T)
#next 6 goverment
gov1<-colSums(nmatriz[(133:139),,drop = F], na.rm = T)
nmatriz<-rbind(agro1,mining1,agroindustries1,chemistry1,steal_derivatives1,steal_mechanic1,basicservices1, construction1, commerce1, turism1, comunications1, finances1,professional_services1, gov1)
##Col and row of thesame name
rownames(nmatriz)<-colnames(nmatriz)
#
y<-rbind(nmatriz, c(colSums(nmatriz[,])))
totals<-tail(y,1)
y<-y[,-1]
total<-as.numeric(totals[1,])
#View(k)
corrplot(as.matrix(k), method = "circle")
eigen(C)$values
source('~/Documents/R/Proyectos/Matriz IP/intro.R', echo=TRUE)
C
D
##Properly convert to numeric
matriz1<-read.xlsx("matriz-insumo-productoexcel.xlsl", skip = 5)
##Properly convert to numeric
matriz1<-read.xls("matriz-insumo-productoexcel.xlsl", skip = 5)
##Properly convert to numeric
matriz1<-read_xls("matriz-insumo-productoexcel.xlsl", skip = 5)
##Properly convert to numeric
matriz1<-readxl("matriz-insumo-productoexcel.xlsl", skip = 5)
##Properly convert to numeric
library(tidyverse)
matriz1<-readxl("matriz-insumo-productoexcel.xlsl", skip = 5)
install.packages("readxl")
install.packages("readxl")
##Properly convert to numeric
library(readxl)
install.packages("readxl")
matriz1<-readxl("matriz-insumo-productoexcel.xlsl", skip = 5)
matriz1<-read.xl("matriz-insumo-productoexcel.xlsl", skip = 5)
matriz1<-read.xls("matriz-insumo-productoexcel.xlsl", skip = 5)
matriz1<-read_excel("matriz-insumo-productoexcel.xlsl", skip = 5)
matriz1<-read_excel("matriz-insumo-productoexcel.xlsx", skip = 5)
matriz1
View(matriz1)
matriz1 <- mutate_all(matriz1, function(x) as.numeric(as.character(x)))
library(tidyverse)
matriz1 <- mutate_all(matriz1, function(x) as.numeric(as.character(x)))
View(matriz1)
##Since the other script was really messy, I'll start again
library(tidyverse)
library(readxl)
matriz1<-read_excel("matriz-insumo-productoexcel.xlsx", skip = 5)
View(matriz1)
matriz1<-matriz1[c(3,125),]
View(matriz1)
matriz1<-read_excel("matriz-insumo-productoexcel.xlsx", skip = 5)
matriz1<-matriz1[,-c(2:3)]
View(matriz1)
matriz1<-read_excel("matriz-insumo-productoexcel.xlsx", skip = 5)
matriz1<-matriz1[,-c(2:4)]
View(matriz1)
matriz1<-read_excel("matriz-insumo-productoexcel.xlsx", skip = 5)
matriz1<-matriz1[,-c(1:3)]
View(matriz1)
matriz1<-matriz1[c(1:124),c(1:124)]
View(matriz1)
source('~/Documents/R/Proyectos/Matriz IP/cordoba-iom_v2.R', echo=TRUE)
agro<-rowSums(matriz1[,(1:11),drop = F], na.rm = T)
View(agro)
agro<-rowSums(matriz1[,(1:11),drop = F], na.rm = T)
View(agro)
329959.501688
agro[1]
#the next 3 are from mining.
mining<-rowSums(matriz1[,(12:14),drop = F], na.rm = T)
#View(mining)
mining[1]
#View(mining)
mining[14]
#View(mining)
mining[15]
hotel_restaurant<-rowSums(matriz1[,(99:100),drop = F], na.rm = T)
agro<-rowSums(matriz1[,(1:11),drop = F], na.rm = T)
mining<-rowSums(matriz1[,(12:14),drop = F], na.rm = T)
manufacturas<-rowSums(matriz1[,(15:92),drop = F], na.rm = T)
elec_gas_water<-rowSums(matriz1[,(93:95),drop = F], na.rm = T)
construction<-rowSums(matriz1[,(96),drop = F], na.rm = T)
commerce<-rowSums(matriz1[,(97:98),drop = F], na.rm = T)
hotel_restaurant<-rowSums(matriz1[,(99:100),drop = F], na.rm = T)
agro<-rowSums(matriz1[,(1:11),drop = F], na.rm = T)
mining<-rowSums(matriz1[,(12:14),drop = F], na.rm = T)
manufacturas<-rowSums(matriz1[,(15:92),drop = F], na.rm = T)
elec_gas_water<-rowSums(matriz1[,(93:95),drop = F], na.rm = T)
construction<-rowSums(matriz1[,(96),drop = F], na.rm = T)
commerce<-rowSums(matriz1[,(97:98),drop = F], na.rm = T)
hotel_restaurant<-rowSums(matriz1[,(99:100),drop = F], na.rm = T)
transport_storage<-rowSums(matriz1[,(101:106),drop = F], na.rm = T)
telecom<-rowSums(matriz1[,(107:108),drop = F], na.rm = T)
finances<-rowSums(matriz1[,(109:110),drop = F], na.rm = T)
real_state<-rowSums(matriz1[,(111:112),drop = F], na.rm = T)
gov<-rowSums(matriz1[,(113),drop = F], na.rm = T)
teaching<-rowSums(matriz1[,(114:115),drop = F], na.rm = T)
health<-rowSums(matriz1[,(116:119),drop = F], na.rm = T)
other_soc_act<-rowSums(matriz1[,(120:123),drop = F], na.rm = T)
domestic_services<-rowSums(matriz1[,(124),drop = F], na.rm = T)
nmatriz<-cbind(agro,mining,manufacturas,elec_gas_water,construction,commerce,
hotel_restaurant,transport_storage,telecom,finances,real_state,
gov,teaching,health,other_soc_act,domestic_services)
View(nmatriz)
##Getting summary of rows
agro<-colSums(matriz1[(1:11),,drop = F], na.rm = T)
##Getting summary of columns
agro<-rowSums(matriz1[,(1:11),drop = F], na.rm = T)
source('~/Documents/R/Proyectos/Matriz IP/cordoba-iom_v2.R', echo=TRUE)
source('~/Documents/R/Proyectos/Matriz IP/cordoba-iom_v2.R', echo=TRUE)
View(io_matrix)
##Same name for cols and rows
rownames(io_matrix)<-colnames(io_matrix)
y<-rbind(io_matrix, c(colSums(io_matrix[,])))
totals<-tail(y,1)
y<-y[,-1]
total<-as.numeric(totals[1,])
k<-io_matrix/total
io_matrix_coef<-k
View(io_matrix_coef)
##Fixing NaN
fix_nan <- function(x){
x[is.nan(x)] <- 0
x
}
fix_nan(io_matrix_coef)
View(io_matrix_coef)
##Fixing NaN
ncols(io_matrix_coef)
##Fixing NaN
ncol(io_matrix_coef)
##Fixing NaN
io_matrix_coef[ncol(io_matrix_coef)]<-0
View(io_matrix_coef)
##Fixing NaN
io_matrix_coef[ncol(io_matrix_coef),]<-0
View(io_matrix_coef)
c(colSums(io_matrix[,]
c(colSums(io_matrix[,])
c(colSums(io_matrix[,]))
c(colSums(io_matrix_coef[,]))
##Transform into coeficient matrix
y<-rbind(io_matrix, c(colSums(io_matrix[,])))
View(y)
source('~/Documents/R/Proyectos/Matriz IP/cordoba-iom_v2.R', echo=TRUE)
##Transform into coeficient matrix
View(io_matrix)
y<-rbind(io_matrix, c(colSums(io_matrix[,])))
totals<-tail(y,1)
y<-y[,-1]
total<-as.numeric(totals[1,])
k<-nmatriz/total
colSums(k[,])
k
View(k)
y<-rbind(io_matrix, c(colSums(io_matrix[,])))
totals<-tail(y,1)
y<-y[,-1]
total<-as.numeric(totals[1,])
k<-io_matrix/total
View(k)
k[ncol(k)]<-0
View(k)
k[ncol(k),]<-0
View(k)
c(colSums(k[,]))
View(c(colSums(k[,])))
##Transform into coeficient matrix
#View(io_matrix)
y<-rbind(io_matrix, c(colSums(io_matrix)))
totals<-tail(y,1)
y
View(y)
y<-y[,-1]
View(y)
##Transform into coeficient matrix
#View(io_matrix)
y<-rbind(io_matrix, c(colSums(io_matrix)))
y<-y[-1,]
View(y)
##Transform into coeficient matrix
#View(io_matrix)
y<-rbind(io_matrix, c(colSums(io_matrix)))
totals<-tail(y,1)
View(totals)
View(y)
##Transform into coeficient matrix
#View(io_matrix)
y<-rbind(io_matrix, c(colSums(io_matrix)))
totals<-tail(y,1)
k<-io_matrix/totals
totals<-tail(y,1)
class(totals)
total<-as.numeric(totals[1,])
View(total)
total<-as.numeric(totals)
totals<-tail(y,1)
total<-as.numeric(totals)
View(total)
totals<-tail(y,1)
View(totals)
total<-as.numeric(totals)
View(total)
totals<-tail(y,1)
##Transform into coeficient matrix
#View(io_matrix)
y<-rbind(io_matrix, c(colSums(io_matrix)))
##Transform into coeficient matrix
#View(io_matrix)
y<-rbind(io_matrix, c(colSums(io_matrix)))
totals<-tail(y,1)
totals<-tail(y,1)
totals
?sweep()
##Transform into coeficient matrix
#View(io_matrix)
y<-rbind(io_matrix, c(colSums(io_matrix)))
sweep(io_matrix, 2, colSums(io_matrix),`/`)
View(sweep(io_matrix, 2, colSums(io_matrix),`/`))
View(colSums(sweep(io_matrix, 2, colSums(io_matrix),`/`)))
##Transform into coeficient matrix
#View(io_matrix)
io_matrix_coef<-sweep(io_matrix, 2, colSums(io_matrix),`/`))
io_matrix_coef <- sweep(io_matrix, 2, colSums(io_matrix),`/`)
io_matrix_coef[1,]<-0
View(io_matrix_coef)
##Transform into coeficient matrix
#View(io_matrix)
io_matrix_coef <- sweep(io_matrix, 2, colSums(io_matrix),`/`)
io_matrix_coef[,-1]<-0
View(io_matrix_coef)
##Transform into coeficient matrix
#View(io_matrix)
io_matrix_coef <- sweep(io_matrix, 2, colSums(io_matrix),`/`)
io_matrix_coef[ncol(io_matrix_coef),]<-0
View(io_matrix_coef)
##Transform into coeficient matrix
#View(io_matrix)
io_matrix_coef <- sweep(io_matrix, 2, colSums(io_matrix),`/`)
io_matrix_coef[,ncol(io_matrix_coef)]<-0
View(io_matrix_coef)
#View(io_matrix_coef)
corrplot(as.matrix(io_matrix_coef), method = "circle")
#View(io_matrix_coef)
library(corrplot)
corrplot(as.matrix(io_matrix_coef), method = "circle")
source('~/Documents/R/Proyectos/Cordoba/IO/cordoba-iom_v2.R', echo=TRUE)
setwd("~/Documents/R/Proyectos/Cordoba/IO")
source('~/Documents/R/Proyectos/Cordoba/IO/cordoba-iom_v2.R', echo=TRUE)
source('~/Documents/R/R for Data Science/13relational data.R', echo=TRUE)
june1313%>%
group_by(dest, wind_speed)%>%
summarise(delay = mean(arr_delay, na.rm = T))%>%
inner_join(airports, by=c("dest"="faa"))%>%
ggplot(aes(x=lon, y = lat, color = wind_speed, size = delay))+
geom_point()+
borders("state")+
coord_quickmap()
colnames(pplot)
install.packages("tmap")
install.packages("tmaptools")
install.packages("sf")
install.packages("leaflet")
setwd("~/Documents/R/Proyectos/CortesLuz")
library(maptools)
install.packages("tmaptools")
install.packages("maptools")
library(maptools)
crswgs84=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
states<-readShapePoly("RMBA.shp")
states<-rgdal("RMBA.shp")
install.packages("rgdal")
states<-readOGR("RMBA.shp")
install.packages("rgdal")
install.packages("rgdal")
install.packages("rgdal")
states<-readShapePoly("RMBA.shp")
library(maptools)
states<-readShapePoly("RMBA.shp")
states<-readOGR("RMBA.shp")
library(rgdal)
states<-readOGR(".","RMBA.shp")
setwd("~/Documents/R/Proyectos/CortesLuz")
states<-readOGR(".","RMBA.shp")
library(raster)
library(sp)
?readOGR()
states<-readOGR(".","RMBA.shp")
library(raster)
s<-shapefile("RMBA.shp")
s<-shapefile("RMBA.shx")
?shapefile()
s<-shapefile(x = "RMBA.shx")
?shapefile()
states<-readOGR(".","RMBA.shp")
states<-readOGR(".","RMBA.shx")
states<-readOGR(".","RMBA")
states<-readOGR(".","RMBA")
class(states)
st_geometry_type(states)
library(sp)
st_geometry_type(states)
st_bbox(states)
install.packages("sp")
library(sp)
library(ggplot2)
shp<-readOGR(".","RMBA")
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), colour = "black", fill = NA)
map
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), fill = NA)
map
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), color = "black", fill = NA)
map
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat), color = "black", fill = NA)
map
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), color = "black", fill = NA)
map
source('~/Documents/R/Proyectos/CortesLuz/map.R', echo=TRUE)
library(rgdal)
library(raster)
library(ggplot2)
library(sp)
shp<-readOGR(".","RMBA")
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), color = "black", fill = NA)
map
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), color = "black")
map
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), color = "black", fill = NA)+scale_fill_hue(l = 40) +
coord_equal() +
theme(legend.position = "none", title = element_blank(),
axis.text = element_blank())
print(map)
plot(shp)
shp<-readOGR(".","RMBA")
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), color = "black", fill = NA)+scale_fill_hue(l = 40) +
coord_equal() +
theme(legend.position = "none", title = element_blank(),
axis.text = element_blank())
print(map)
shp<-readOGR(".","RMBA")
plot(shp)
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), color = "black", fill = NA)+scale_fill_hue(l = 40) +
coord_equal() +
theme(legend.position = "none", title = element_blank(),
axis.text = element_blank())
print(map)
ub_argentina="C:\\mapas\\ARG_adm2.rds"
library(RColorBrewer)
####Maping https://www.computerworld.com/article/3038270/data-analytics/create-maps-in-r-in-10-fairly-easy-steps.html
library(sp)
argentina = readRDS(".", "ARG_adm2.rds")
setwd("~/Documents/R/Proyectos/CortesLuz")
argentina = readRDS("ARG_adm2.rds")
argentina = readRDS("ARG_adm2")
argentina = readRDS("gadm36_ARG_2_sp/")
argentina = readRDS("gadm36_ARG_2_sp")
argentina = readRDS("gadm36_ARG_2_sf")
ub_argentina=".\\ARG_adm2.rds"
argentina = readRDS(ub_argentina)
ub_argentina=".\\gadm36_ARG_shp"
argentina = readRDS(ub_argentina)
argentina = readRDS("gadm36_ARG_2")
argentina = readRDS(".\\gadm36_ARG_shp\\gadm36_ARG_2")
library(rgdal)
library(raster)
library(ggplot2)
shp<-readOGR(".","gadm36_ARG_2")
setwd("~/Documents/R/Proyectos/CortesLuz/gadm36_ARG_shp")
shp<-readOGR(".","gadm36_ARG_2")
map <- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), color = "black", fill = NA)
map
b.aires = argentina[argentina$NAME_1=="Buenos Aires",]
argentina<-readOGR(".","gadm36_ARG_2")
b.aires = argentina[argentina$NAME_1=="Buenos Aires",]
aleatorio = rpois(length(unique(b.aires$NAME_2)),3)
b.aires@data=data.frame(aleatorio)
spplot(b.aires,col.regions=brewer.pal(5, "Blues"))
argentina$NAME_0
argentina$NAME_1
b.aires = argentina[argentina$NAME_1=="Buenos Aires"|argentina$NAME_1=="Ciudad de Buenos Aires",]
argentina$NAME_1
aleatorio = rpois(length(unique(b.aires$NAME_2)),3)
b.aires@data=data.frame(aleatorio)
spplot(b.aires,col.regions=brewer.pal(5, "Blues"))
argentina$NAME_2
b.aires = argentina[c(argentina$NAME_1=="Buenos Aires",argentina$NAME_1=="Ciudad de Buenos Aires"),]
b.aires = argentina[argentina$NAME_1=="Buenos Aires"|argentina$NAME_1=="Ciudad de Buenos Aires",]
argentina$NAME_2
aleatorio = rpois(length(unique(b.aires$NAME_2)),3)
b.aires@data=data.frame(aleatorio)
spplot(b.aires,col.regions=brewer.pal(5, "Blues"))
b.aires = argentina[NAME_1=="Ciudad de Buenos Aires",]
b.aires = argentina[argentina$NAME_1=="Ciudad de Buenos Aires",]
aleatorio = rpois(length(unique(b.aires$NAME_2)),3)
b.aires@data=data.frame(aleatorio)
spplot(b.aires,col.regions=brewer.pal(5, "Blues"))
