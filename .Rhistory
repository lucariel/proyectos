#Parse Numbers
parse_double("1,23", locale = locale(decimal_mark = ","))
#Parse Numbers
parse_double("1.23")
#11 Data import
library(tidyverse)
parse_double("1,23", locale = locale(decimal_mark = ","))
#Parse Numbers
parse_double("1.23")
parse_number("It cost $123.45", locale = )
parse_number("It cost $123.45", locale = )
parse_number("It cost $123.45")
parse_number("It cost $123.456.789", locale = locale(grouping_mark = "."))
parse_number("It cost $123.456.789", locale = locale(grouping_mark = ";."))
parse_number("It cost $123.456.789", locale = locale(grouping_mark = "."))
#11.3.2 Strings
charToRaw("Hadley")
##You can change the encoding to others such as Latin1, Latin2 and ASCII
parse_character(x1, locale = locale(encoding = "Latin1"))
##You can change the encoding to others such as Latin1, Latin2 and ASCII
x1 <- "El Ni\xf1o was particularly bad this year"
parse_character(x1, locale = locale(encoding = "Latin1"))
parse_character(x1)
parse_character(x1, locale = locale(encoding = "Latin1"))
##To find the correct encoding: it's usually a metadata info, in case it's not there
guess_encoding(charToRaw(x1))
parse_character(x1, locale = locale(encoding = "ISO-8859-1"))
parse_factor(c("apple", "banana", "bananana"), levels = fruit)
#11.3.3 Factors
##parse_factor(c(vector, to, parse),level=c(a1, a2, a3))
fruit <- c("apple", "banana")
parse_factor(c("apple", "banana", "bananana"), levels = fruit)
parse_datetime(20101010)
#parse_date() expects a four digit year, a - or /, the month, a - or /, then the day:
parse_date(20101010)
parse_date(2010-10-10)
parse_date("2010-10-10")
parse_date("20101010")
parse_datetime(20101010)
parse_datetime(20101310)
parse_datetime(20101210)
parse_date("01/02/15", "%m/%d/%y")
#> [1] "2015-01-02"
parse_date("01/02/15", "%d/%m/%y")
#> [1] "2015-02-01"
parse_date("01/02/15", "%y/%m/%d")
#> [1] "2001-02-15"
?locale()
parse_number("It cost $123.456.789", locale = locale(grouping_mark = ".", decimal_mark ="."))
parse_number("It cost $123.456,789", locale = locale(grouping_mark = ".", decimal_mark =","))
parse_number("It cost $123.456,789", locale = locale(grouping_mark = ".")
parse_number("It cost $123.456,789", locale = locale(grouping_mark = "."))
parse_number("It cost $123.456,789", locale = locale(grouping_mark = "."))
parse_number("It cost $123.456,789", locale = locale(decimal_mark = "."))
date_format(20101010)
?locale()
parse_date("01/02/15", locale = locale(date_format = "%m/%d/%y"))
locale("es", decimal_mark = ",")
parse_number("It cost $123.456,789", locale = "es")
es<-locale("es", decimal_mark = ",")
parse_number("It cost $123.456,789", locale =es)
#5.Whatâ€™s the difference between read_csv() and read_csv2()?
?read_csv()
?read_csv2
?read_csv2()
t2 <- "11:15:10.12 PM"
d1 <- "January 1, 2010"
d2 <- "2015-Mar-07"
d3 <- "06-Jun-2017"
d4 <- c("August 19 (2015)", "July 1 (2015)")
d5 <- "12/30/14" # Dec 30, 2014
t1 <- "1705"
t2 <- "11:15:10.12 PM"
parse_date(d1, "%B %d %Y")
parse_date(d1, "%B %d, %Y")
#7.Generate the correct format string to parse each of the following dates and times:
d1 <- "January 1, 2010"parse_date(d1, "%B %d, %Y")
parse_date(d2, "%Y-%m-%d")
parse_date(d2, "%Y-%b-%d")
parse_date(d3, "%d-%b-%Y")
parse_date(d4, "%B %d (%Y)")
parse_date(d5, "%b/%d/%y")
parse_date(d5, "%m/%d/%y")
parse_time(t1)
parse_time(t1, "%H%M")
parse_time(t2, "%Z")
parse_time(t2)
read.csv("matriz-insumo-producto.csv")
setwd("~/Documents/R/Proyectos/Matriz IP")
read.csv("matriz-insumo-producto.csv")
read.csv("matriz-insumo-producto.csv")
matriz1<-read.csv("matriz-insumo-producto.csv")
matriz1
class(matriz1)
matriz1<-as.tibble(read.csv("matriz-insumo-producto.csv"))
library(tidyverse)
matriz1<-as.tibble(read.csv("matriz-insumo-producto.csv"))
class(matriz1)
matriz1
View(matriz1)
matriz1<-as.tibble(read.csv("matriz-insumo-producto.csv", skip = 5))
View(matriz1)
colnames(matriz1)
rownames(matriz1)
C = cbind(c(0.2, 0.3, 0.5), c(0.4, 0.3, 0.3), c(0.6, 0.2, 0.2))
C
rownames(C, do.NULL = T, prefix = "row")
rownames(C)<-c("trigo", "textiles", "acero")
colnames(C, do.NULL = T, prefix = "col")
colnames(C)<-c("trigo", "textiles", "acero")
C
rownames(matriz1)<-colnames(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
rownames(matriz1)<-colnames(matriz1)
colnames(matriz1)
rownames(matriz1)
View(matriz1)
matriz_1<-head(matriz1, -2)
colnames(matriz_1)
rownames(matriz_1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
rownames(matriz_1)<-colnames(matriz_1)
rownames(matriz_1)
View(matriz_1)
matriz_1<-matriz_1[,-c(2:3)]
View(matriz_1)
matriz_1<-matriz_1[-c(2:3),]
View(matriz_1)
matriz_1<-matriz_1[-1,]
View(matriz_1)
matriz_1<-matriz_1[,-1]
View(matriz_1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
View(-c(2:3))
View(matriz1)
matriz_1<-head(matriz1, -2)
rownames(matriz_1)<-colnames(matriz_1)
View(matriz_1)
matriz_1 <- matriz_1[-c(1:3), -c(1:3)]
View(matriz_1)
ncol(matriz_1)
nrow(matriz_1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
View(matriz1)
matriz1<-matriz1[-c(2:3),]
View(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
View(matriz1)
matriz1<-matriz1[-c(2:3),]
View(matriz1)
ncol(matriz1)
nrow(matriz1)
rownames(matriz1)<-colnames(matriz1)
View(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
matriz1<-matriz1[-c(2:3),]
rownames(matriz1)<-colnames(matriz1)
View(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
View(matriz1)
matriz1<-matriz1[-c(2:3),]
matriz1
View(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
View(matriz1)
matriz1<-matriz1[,-c(2:3)]
View(matriz1)
matriz1<-matriz1[c(1:143), c(1:143)]
View(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
matriz1<-matriz1[,-c(2:3)]
matriz1<-matriz1[c(1:131), c(1:131)]
View(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
View(matriz1)
matriz1<-matriz1[,-c(2:3)]
matriz1<-matriz1[c(1:132), c(1:132)]
View(matriz1)
rownames(matriz1)<-colnames(matriz1)
View(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
matriz1<-matriz1[,-c(2:3)]
matriz1<-matriz1[c(1:132), c(1:132)]
matriz1-<matriz1[,-1]
matriz1<-matriz1[,-1]
View(matriz1)
rownames(matriz1)<-colnames(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
View(matriz1)
matriz1<-matriz1[,-c(2:3)]
matriz1<-matriz1[c(1:132), c(1:132)]
View(matriz1)
ncol(matriz1)
nrow(matriz1)
matriz1<-matriz1[,-1]
nrow(matriz1)
ncol(matriz1)
View(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
View(matriz1)
matriz1<-matriz1[,-c(2:3)]
matriz1<-matriz1[c(1:133), c(1:132)]
matriz1<-matriz1[,-1]
ncol(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
matriz1<-matriz1[,-c(2:3)]
matriz1<-matriz1[c(1:132), c(1:131)]
matriz1<-matriz1[,-1]
ncol(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
matriz1<-matriz1[,-c(2:3)]
matriz1<-matriz1[c(1:132), c(1:132)]
ncol(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
matriz1<-matriz1[,-c(2:3)]
matriz1<-matriz1[c(1:124), c(1:124)]
View(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
matriz1<-matriz1[,-c(2:3)]
matriz1<-matriz1[c(1:124), c(2:124)]
View(matriz1)
matriz1<-read.csv("matriz-insumo-producto.csv", skip = 5)
matriz1<-matriz1[,-c(2:3)]
matriz1<-matriz1[c(1:124), c(2:125)]
ncol(matriz1)
nrow(matriz1)
rownames(matriz1)<-colnames(matriz1)
View(matriz1)
ncol(matriz1)
nrow(matriz1)
